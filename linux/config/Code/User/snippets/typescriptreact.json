{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Functional component": {
		"prefix": "fc",
		"body": [
			"import React from 'react'",
			"",
			"interface Props {",
			"\t${2:props}",
			"}",
			"",
			"const ${1:${TM_FILENAME_BASE}}: React.FC<Props> = ({$3}) => (",
			"\t${0:tsx}",
			")",
			"",
			"export default ${1:${TM_FILENAME_BASE}}"
		],
		"description": "Functional component"
	},
	"Use async": {
		"prefix": "ua",
		"body": [
			"import useAsync from 'use-async-react'",
			"",
			"const { call: ${2:funcName}, loading, error } = useAsync(${2:funcName})"
		],
		"description": "Functional component"
	},
	"Styled components": {
		"prefix": "sc",
		"body": [
			"import styled from 'styled-components'",
			"",
			"const ${1:name} = styled${2:.component}`",
			"\t$0",
			"`"
		],
		"description": "Styled components"
	},
	"Use state hook": {
		"prefix": "us",
		"body": [
			"import {useState} from 'react'",
			"",
			"const [${1:name}, set$0${1:name}] = useState(${2:initial value})",
		],
		"description": "Use state hook"
	},
	"Preact": {
		"prefix": "prx",
		"body": [
			"import { FunctionComponent, h } from 'preact'",
			"import { useState } from 'preact/hooks'",
			"",
			"interface Props {",
			"",
			"}",
			"",
			"const ${TM_FILENAME_BASE}: FunctionComponent<Props> = () => {",
			"\tconst [state, setState] = useState(0)",
			"",
			"\treturn ${0:jsx}",
			"}",
			"",
			"export default ${TM_FILENAME_BASE}"
		],
		"description": "Preact"
	}
}
